
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON COMMA DECREMENT DIVIDE EQ EQUALS FLOAT GE GT ID INCREMENT INTEGER LAND LBRACE LE LNOT LOR LPAREN LT MINUS MODULO NE PLUS RBRACE RPAREN SEMI STR TERNARY TIMES do else float for if int return str whileprogram : external_declaration\n               | program external_declarationexternal_declaration : function_definition\n                            | declarationfunction_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement\n                           | type_specifier ID LPAREN RPAREN compound_statementdeclaration : init_declarator_list SEMIinit_declarator_list : type_specifier init_declaratortype_specifier : int\n\t| float\n\t| strinit_declarator : declarator\n\t| declarator EQUALS initializerdeclarator : IDparameter_list : parameter\n                      | parameter_list COMMA parameterparameter : type_specifier declaratorinitializer : assignment_expression statement_list : statement\n                      | statement_list statementstatement : expression_statement\n\t| declaration\t\n\t| compound_statement\n\t| selection_statement\n\t| iteration_statement\n\t| jump_statementexpression_statement : expression SEMIcompound_statement : LBRACE statement_list RBRACE\n\t| LBRACE  RBRACEselection_statement : if LPAREN expression RPAREN statement\n                           | if LPAREN expression RPAREN statement else statementiteration_statement : while LPAREN expression RPAREN statement\n                           | do statement while LPAREN expression RPAREN SEMI\n                           | for LPAREN expression SEMI expression SEMI expression RPAREN statementjump_statement : return expression SEMIexpression : assignment_expression\n\t| expression COMMA assignment_expressionassignment_expression : conditional_expression assignment_expression : ID EQUALS assignment_expressionconditional_expression : logical_or_expression\n\t| logical_or_expression TERNARY expression COLON conditional_expressionlogical_or_expression : logical_and_expression\n\t| logical_or_expression LOR logical_and_expressionlogical_and_expression : equality_expression\n\t| logical_and_expression LAND equality_expressionequality_expression : relational_expression\n\t| equality_expression EQ relational_expression\n\t| equality_expression NE relational_expressionrelational_expression : additive_expression\n\t| relational_expression LT additive_expression\n\t| relational_expression GT additive_expression\n\t| relational_expression LE additive_expression\n\t| relational_expression GE additive_expressionadditive_expression : multiplicative_expression\n\t| additive_expression PLUS multiplicative_expression\n\t| additive_expression MINUS multiplicative_expressionmultiplicative_expression : unary_expression\n\t| multiplicative_expression TIMES unary_expression\n\t| multiplicative_expression DIVIDE unary_expression\n\t| multiplicative_expression MODULO unary_expressionunary_expression : postfix_expression\n\t| LNOT unary_expression\n\t| MINUS unary_expression\n\t| INCREMENT unary_expression\n\t| DECREMENT unary_expressionpostfix_expression : primary_expression postfix_expression : ID LPAREN argument_expression_list RPAREN primary_expression : ID primary_expression : INTEGER\n\t| FLOAT\n\t| STR\n\t| LPAREN expression RPARENargument_expression_list : assignment_expression\n\t| argument_expression_list COMMA assignment_expression'
    
_lr_action_items = {'int':([0,1,2,3,4,10,14,15,45,46,47,71,73,74,75,76,77,78,79,80,81,85,108,109,110,124,127,128,131,132,135,138,139,141,142,],[7,7,-1,-3,-4,-2,-7,7,7,-6,7,-5,7,-29,-19,-21,-22,-23,-24,-25,-26,7,-28,-20,-27,-35,7,7,-30,-32,7,-31,-33,7,-34,]),'float':([0,1,2,3,4,10,14,15,45,46,47,71,73,74,75,76,77,78,79,80,81,85,108,109,110,124,127,128,131,132,135,138,139,141,142,],[8,8,-1,-3,-4,-2,-7,8,8,-6,8,-5,8,-29,-19,-21,-22,-23,-24,-25,-26,8,-28,-20,-27,-35,8,8,-30,-32,8,-31,-33,8,-34,]),'str':([0,1,2,3,4,10,14,15,45,46,47,71,73,74,75,76,77,78,79,80,81,85,108,109,110,124,127,128,131,132,135,138,139,141,142,],[9,9,-1,-3,-4,-2,-7,9,9,-6,9,-5,9,-29,-19,-21,-22,-23,-24,-25,-26,9,-28,-20,-27,-35,9,9,-30,-32,9,-31,-33,9,-34,]),'$end':([1,2,3,4,10,14,46,71,74,108,],[0,-1,-3,-4,-2,-7,-6,-5,-29,-28,]),'ID':([5,7,8,9,14,16,17,31,34,35,36,38,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,73,74,75,76,77,78,79,80,81,85,87,88,107,108,109,110,111,112,114,117,118,124,127,128,129,130,131,132,135,137,138,139,141,142,],[11,-9,-10,-11,-7,24,43,65,65,65,65,24,24,24,24,24,65,65,65,65,65,65,65,65,65,65,65,65,65,24,-29,-19,-21,-22,-23,-24,-25,-26,24,24,43,24,-28,-20,-27,24,24,24,24,65,-35,24,24,24,24,-30,-32,24,24,-31,-33,24,-34,]),'SEMI':([6,11,12,13,21,22,23,24,25,26,27,28,29,30,32,33,37,39,40,41,43,64,65,66,67,68,70,82,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,115,116,119,123,126,134,136,],[14,-14,-8,-12,-13,-18,-38,-68,-40,-42,-44,-46,-49,-54,-57,-61,-66,-69,-70,-71,-14,-63,-68,-62,-64,-65,-36,110,-39,-43,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-72,124,-67,-37,130,-41,137,139,]),'LPAREN':([11,14,16,24,31,34,35,36,38,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,73,74,75,76,77,78,79,80,81,83,84,85,86,87,107,108,109,110,111,112,114,117,118,122,124,127,128,129,130,131,132,135,137,138,139,141,142,],[15,-7,38,49,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,49,38,-29,-19,-21,-22,-23,-24,-25,-26,111,112,38,114,38,38,-28,-20,-27,38,38,38,38,38,129,-35,38,38,38,38,-30,-32,38,38,-31,-33,38,-34,]),'EQUALS':([11,13,24,43,],[-14,16,48,-14,]),'RBRACE':([14,47,73,74,75,76,77,78,79,80,81,108,109,110,124,131,132,138,139,142,],[-7,74,108,-29,-19,-21,-22,-23,-24,-25,-26,-28,-20,-27,-35,-30,-32,-31,-33,-34,]),'LBRACE':([14,19,44,47,73,74,75,76,77,78,79,80,81,85,108,109,110,124,127,128,131,132,135,138,139,141,142,],[-7,47,47,47,47,-29,-19,-21,-22,-23,-24,-25,-26,47,-28,-20,-27,-35,47,47,-30,-32,47,-31,-33,47,-34,]),'if':([14,47,73,74,75,76,77,78,79,80,81,85,108,109,110,124,127,128,131,132,135,138,139,141,142,],[-7,83,83,-29,-19,-21,-22,-23,-24,-25,-26,83,-28,-20,-27,-35,83,83,-30,-32,83,-31,-33,83,-34,]),'while':([14,47,73,74,75,76,77,78,79,80,81,85,108,109,110,113,124,127,128,131,132,135,138,139,141,142,],[-7,84,84,-29,-19,-21,-22,-23,-24,-25,-26,84,-28,-20,-27,122,-35,84,84,-30,-32,84,-31,-33,84,-34,]),'do':([14,47,73,74,75,76,77,78,79,80,81,85,108,109,110,124,127,128,131,132,135,138,139,141,142,],[-7,85,85,-29,-19,-21,-22,-23,-24,-25,-26,85,-28,-20,-27,-35,85,85,-30,-32,85,-31,-33,85,-34,]),'for':([14,47,73,74,75,76,77,78,79,80,81,85,108,109,110,124,127,128,131,132,135,138,139,141,142,],[-7,86,86,-29,-19,-21,-22,-23,-24,-25,-26,86,-28,-20,-27,-35,86,86,-30,-32,86,-31,-33,86,-34,]),'return':([14,47,73,74,75,76,77,78,79,80,81,85,108,109,110,124,127,128,131,132,135,138,139,141,142,],[-7,87,87,-29,-19,-21,-22,-23,-24,-25,-26,87,-28,-20,-27,-35,87,87,-30,-32,87,-31,-33,87,-34,]),'LNOT':([14,16,31,34,35,36,38,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,73,74,75,76,77,78,79,80,81,85,87,107,108,109,110,111,112,114,117,118,124,127,128,129,130,131,132,135,137,138,139,141,142,],[-7,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-29,-19,-21,-22,-23,-24,-25,-26,34,34,34,-28,-20,-27,34,34,34,34,34,-35,34,34,34,34,-30,-32,34,34,-31,-33,34,-34,]),'MINUS':([14,16,24,29,30,31,32,33,34,35,36,37,38,39,40,41,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,73,74,75,76,77,78,79,80,81,85,87,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,116,117,118,124,127,128,129,130,131,132,135,137,138,139,141,142,],[-7,31,-68,60,-54,31,-57,-61,31,31,31,-66,31,-69,-70,-71,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-63,-68,-62,-64,-65,31,-29,-19,-21,-22,-23,-24,-25,-26,31,31,60,60,60,60,-55,-56,-58,-59,-60,-72,31,-28,-20,-27,31,31,31,-67,31,31,-35,31,31,31,31,-30,-32,31,31,-31,-33,31,-34,]),'INCREMENT':([14,16,31,34,35,36,38,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,73,74,75,76,77,78,79,80,81,85,87,107,108,109,110,111,112,114,117,118,124,127,128,129,130,131,132,135,137,138,139,141,142,],[-7,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-29,-19,-21,-22,-23,-24,-25,-26,35,35,35,-28,-20,-27,35,35,35,35,35,-35,35,35,35,35,-30,-32,35,35,-31,-33,35,-34,]),'DECREMENT':([14,16,31,34,35,36,38,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,73,74,75,76,77,78,79,80,81,85,87,107,108,109,110,111,112,114,117,118,124,127,128,129,130,131,132,135,137,138,139,141,142,],[-7,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-29,-19,-21,-22,-23,-24,-25,-26,36,36,36,-28,-20,-27,36,36,36,36,36,-35,36,36,36,36,-30,-32,36,36,-31,-33,36,-34,]),'INTEGER':([14,16,31,34,35,36,38,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,73,74,75,76,77,78,79,80,81,85,87,107,108,109,110,111,112,114,117,118,124,127,128,129,130,131,132,135,137,138,139,141,142,],[-7,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-29,-19,-21,-22,-23,-24,-25,-26,39,39,39,-28,-20,-27,39,39,39,39,39,-35,39,39,39,39,-30,-32,39,39,-31,-33,39,-34,]),'FLOAT':([14,16,31,34,35,36,38,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,73,74,75,76,77,78,79,80,81,85,87,107,108,109,110,111,112,114,117,118,124,127,128,129,130,131,132,135,137,138,139,141,142,],[-7,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-29,-19,-21,-22,-23,-24,-25,-26,40,40,40,-28,-20,-27,40,40,40,40,40,-35,40,40,40,40,-30,-32,40,40,-31,-33,40,-34,]),'STR':([14,16,31,34,35,36,38,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,73,74,75,76,77,78,79,80,81,85,87,107,108,109,110,111,112,114,117,118,124,127,128,129,130,131,132,135,137,138,139,141,142,],[-7,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-29,-19,-21,-22,-23,-24,-25,-26,41,41,41,-28,-20,-27,41,41,41,41,41,-35,41,41,41,41,-30,-32,41,41,-31,-33,41,-34,]),'else':([14,74,76,77,78,79,80,81,108,110,124,131,132,138,139,142,],[-7,-29,-21,-22,-23,-24,-25,-26,-28,-27,-35,135,-32,-31,-33,-34,]),'RPAREN':([15,18,20,23,24,25,26,27,28,29,30,32,33,37,39,40,41,42,43,64,65,66,67,68,69,70,72,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,116,119,120,121,125,126,133,140,],[19,44,-15,-38,-68,-40,-42,-44,-46,-49,-54,-57,-61,-66,-69,-70,-71,-17,-14,-63,-68,-62,-64,-65,106,-36,-16,-39,116,-73,-43,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-72,-67,-37,127,128,-74,-41,136,141,]),'COMMA':([18,20,23,24,25,26,27,28,29,30,32,33,37,39,40,41,42,43,64,65,66,67,68,69,70,72,82,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,115,116,119,120,121,123,125,126,133,134,140,],[45,-15,-38,-68,-40,-42,-44,-46,-49,-54,-57,-61,-66,-69,-70,-71,-17,-14,-63,-68,-62,-64,-65,107,-36,-16,107,-39,117,-73,107,-43,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-72,107,-67,-37,107,107,107,-74,-41,107,107,107,]),'COLON':([23,24,25,26,27,28,29,30,32,33,37,39,40,41,64,65,66,67,68,70,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,116,119,126,],[-38,-68,-40,-42,-44,-46,-49,-54,-57,-61,-66,-69,-70,-71,-63,-68,-62,-64,-65,-36,-39,118,-43,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-72,-67,-37,-41,]),'TIMES':([24,30,32,33,37,39,40,41,64,65,66,67,68,101,102,103,104,105,106,116,],[-68,61,-57,-61,-66,-69,-70,-71,-63,-68,-62,-64,-65,61,61,-58,-59,-60,-72,-67,]),'DIVIDE':([24,30,32,33,37,39,40,41,64,65,66,67,68,101,102,103,104,105,106,116,],[-68,62,-57,-61,-66,-69,-70,-71,-63,-68,-62,-64,-65,62,62,-58,-59,-60,-72,-67,]),'MODULO':([24,30,32,33,37,39,40,41,64,65,66,67,68,101,102,103,104,105,106,116,],[-68,63,-57,-61,-66,-69,-70,-71,-63,-68,-62,-64,-65,63,63,-58,-59,-60,-72,-67,]),'PLUS':([24,29,30,32,33,37,39,40,41,64,65,66,67,68,97,98,99,100,101,102,103,104,105,106,116,],[-68,59,-54,-57,-61,-66,-69,-70,-71,-63,-68,-62,-64,-65,59,59,59,59,-55,-56,-58,-59,-60,-72,-67,]),'LT':([24,28,29,30,32,33,37,39,40,41,64,65,66,67,68,95,96,97,98,99,100,101,102,103,104,105,106,116,],[-68,55,-49,-54,-57,-61,-66,-69,-70,-71,-63,-68,-62,-64,-65,55,55,-50,-51,-52,-53,-55,-56,-58,-59,-60,-72,-67,]),'GT':([24,28,29,30,32,33,37,39,40,41,64,65,66,67,68,95,96,97,98,99,100,101,102,103,104,105,106,116,],[-68,56,-49,-54,-57,-61,-66,-69,-70,-71,-63,-68,-62,-64,-65,56,56,-50,-51,-52,-53,-55,-56,-58,-59,-60,-72,-67,]),'LE':([24,28,29,30,32,33,37,39,40,41,64,65,66,67,68,95,96,97,98,99,100,101,102,103,104,105,106,116,],[-68,57,-49,-54,-57,-61,-66,-69,-70,-71,-63,-68,-62,-64,-65,57,57,-50,-51,-52,-53,-55,-56,-58,-59,-60,-72,-67,]),'GE':([24,28,29,30,32,33,37,39,40,41,64,65,66,67,68,95,96,97,98,99,100,101,102,103,104,105,106,116,],[-68,58,-49,-54,-57,-61,-66,-69,-70,-71,-63,-68,-62,-64,-65,58,58,-50,-51,-52,-53,-55,-56,-58,-59,-60,-72,-67,]),'EQ':([24,27,28,29,30,32,33,37,39,40,41,64,65,66,67,68,94,95,96,97,98,99,100,101,102,103,104,105,106,116,],[-68,53,-46,-49,-54,-57,-61,-66,-69,-70,-71,-63,-68,-62,-64,-65,53,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-72,-67,]),'NE':([24,27,28,29,30,32,33,37,39,40,41,64,65,66,67,68,94,95,96,97,98,99,100,101,102,103,104,105,106,116,],[-68,54,-46,-49,-54,-57,-61,-66,-69,-70,-71,-63,-68,-62,-64,-65,54,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-72,-67,]),'LAND':([24,26,27,28,29,30,32,33,37,39,40,41,64,65,66,67,68,93,94,95,96,97,98,99,100,101,102,103,104,105,106,116,],[-68,52,-44,-46,-49,-54,-57,-61,-66,-69,-70,-71,-63,-68,-62,-64,-65,52,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-72,-67,]),'TERNARY':([24,25,26,27,28,29,30,32,33,37,39,40,41,64,65,66,67,68,93,94,95,96,97,98,99,100,101,102,103,104,105,106,116,],[-68,50,-42,-44,-46,-49,-54,-57,-61,-66,-69,-70,-71,-63,-68,-62,-64,-65,-43,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-72,-67,]),'LOR':([24,25,26,27,28,29,30,32,33,37,39,40,41,64,65,66,67,68,93,94,95,96,97,98,99,100,101,102,103,104,105,106,116,],[-68,51,-42,-44,-46,-49,-54,-57,-61,-66,-69,-70,-71,-63,-68,-62,-64,-65,-43,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-72,-67,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'external_declaration':([0,1,],[2,10,]),'function_definition':([0,1,],[3,3,]),'declaration':([0,1,47,73,85,127,128,135,141,],[4,4,77,77,77,77,77,77,77,]),'type_specifier':([0,1,15,45,47,73,85,127,128,135,141,],[5,5,17,17,88,88,88,88,88,88,88,]),'init_declarator_list':([0,1,47,73,85,127,128,135,141,],[6,6,6,6,6,6,6,6,6,]),'init_declarator':([5,88,],[12,12,]),'declarator':([5,17,88,],[13,42,13,]),'parameter_list':([15,],[18,]),'parameter':([15,45,],[20,72,]),'initializer':([16,],[21,]),'assignment_expression':([16,38,47,48,49,50,73,85,87,107,111,112,114,117,127,128,129,130,135,137,141,],[22,70,70,89,91,70,70,70,70,119,70,70,70,125,70,70,70,70,70,70,70,]),'conditional_expression':([16,38,47,48,49,50,73,85,87,107,111,112,114,117,118,127,128,129,130,135,137,141,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,126,23,23,23,23,23,23,23,]),'logical_or_expression':([16,38,47,48,49,50,73,85,87,107,111,112,114,117,118,127,128,129,130,135,137,141,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'logical_and_expression':([16,38,47,48,49,50,51,73,85,87,107,111,112,114,117,118,127,128,129,130,135,137,141,],[26,26,26,26,26,26,93,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'equality_expression':([16,38,47,48,49,50,51,52,73,85,87,107,111,112,114,117,118,127,128,129,130,135,137,141,],[27,27,27,27,27,27,27,94,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'relational_expression':([16,38,47,48,49,50,51,52,53,54,73,85,87,107,111,112,114,117,118,127,128,129,130,135,137,141,],[28,28,28,28,28,28,28,28,95,96,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'additive_expression':([16,38,47,48,49,50,51,52,53,54,55,56,57,58,73,85,87,107,111,112,114,117,118,127,128,129,130,135,137,141,],[29,29,29,29,29,29,29,29,29,29,97,98,99,100,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'multiplicative_expression':([16,38,47,48,49,50,51,52,53,54,55,56,57,58,59,60,73,85,87,107,111,112,114,117,118,127,128,129,130,135,137,141,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,101,102,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'unary_expression':([16,31,34,35,36,38,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,73,85,87,107,111,112,114,117,118,127,128,129,130,135,137,141,],[32,64,66,67,68,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,103,104,105,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'postfix_expression':([16,31,34,35,36,38,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,73,85,87,107,111,112,114,117,118,127,128,129,130,135,137,141,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'primary_expression':([16,31,34,35,36,38,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,73,85,87,107,111,112,114,117,118,127,128,129,130,135,137,141,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'compound_statement':([19,44,47,73,85,127,128,135,141,],[46,71,78,78,78,78,78,78,78,]),'expression':([38,47,50,73,85,87,111,112,114,127,128,129,130,135,137,141,],[69,82,92,82,82,115,120,121,123,82,82,133,134,82,140,82,]),'statement_list':([47,],[73,]),'statement':([47,73,85,127,128,135,141,],[75,109,113,131,132,138,142,]),'expression_statement':([47,73,85,127,128,135,141,],[76,76,76,76,76,76,76,]),'selection_statement':([47,73,85,127,128,135,141,],[79,79,79,79,79,79,79,]),'iteration_statement':([47,73,85,127,128,135,141,],[80,80,80,80,80,80,80,]),'jump_statement':([47,73,85,127,128,135,141,],[81,81,81,81,81,81,81,]),'argument_expression_list':([49,],[90,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> external_declaration','program',1,'p_program','main.py',140),
  ('program -> program external_declaration','program',2,'p_program','main.py',141),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration','main.py',146),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration','main.py',147),
  ('function_definition -> type_specifier ID LPAREN parameter_list RPAREN compound_statement','function_definition',6,'p_function_definition','main.py',152),
  ('function_definition -> type_specifier ID LPAREN RPAREN compound_statement','function_definition',5,'p_function_definition','main.py',153),
  ('declaration -> init_declarator_list SEMI','declaration',2,'p_declaration','main.py',160),
  ('init_declarator_list -> type_specifier init_declarator','init_declarator_list',2,'p_init_declarator_list','main.py',166),
  ('type_specifier -> int','type_specifier',1,'p_type_specifier','main.py',175),
  ('type_specifier -> float','type_specifier',1,'p_type_specifier','main.py',176),
  ('type_specifier -> str','type_specifier',1,'p_type_specifier','main.py',177),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','main.py',182),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','main.py',183),
  ('declarator -> ID','declarator',1,'p_declarator','main.py',190),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','main.py',196),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','main.py',197),
  ('parameter -> type_specifier declarator','parameter',2,'p_parameter','main.py',203),
  ('initializer -> assignment_expression','initializer',1,'p_initializer','main.py',208),
  ('statement_list -> statement','statement_list',1,'p_statement_list','main.py',213),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','main.py',214),
  ('statement -> expression_statement','statement',1,'p_statement','main.py',218),
  ('statement -> declaration','statement',1,'p_statement','main.py',219),
  ('statement -> compound_statement','statement',1,'p_statement','main.py',220),
  ('statement -> selection_statement','statement',1,'p_statement','main.py',221),
  ('statement -> iteration_statement','statement',1,'p_statement','main.py',222),
  ('statement -> jump_statement','statement',1,'p_statement','main.py',223),
  ('expression_statement -> expression SEMI','expression_statement',2,'p_expression_statement','main.py',227),
  ('compound_statement -> LBRACE statement_list RBRACE','compound_statement',3,'p_compound_statement','main.py',231),
  ('compound_statement -> LBRACE RBRACE','compound_statement',2,'p_compound_statement','main.py',232),
  ('selection_statement -> if LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement','main.py',237),
  ('selection_statement -> if LPAREN expression RPAREN statement else statement','selection_statement',7,'p_selection_statement','main.py',238),
  ('iteration_statement -> while LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement','main.py',242),
  ('iteration_statement -> do statement while LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement','main.py',243),
  ('iteration_statement -> for LPAREN expression SEMI expression SEMI expression RPAREN statement','iteration_statement',9,'p_iteration_statement','main.py',244),
  ('jump_statement -> return expression SEMI','jump_statement',3,'p_jump_statement','main.py',250),
  ('expression -> assignment_expression','expression',1,'p_expression','main.py',254),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','main.py',255),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expressionConstante','main.py',260),
  ('assignment_expression -> ID EQUALS assignment_expression','assignment_expression',3,'p_assignment_expression','main.py',264),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression','main.py',279),
  ('conditional_expression -> logical_or_expression TERNARY expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','main.py',280),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','main.py',289),
  ('logical_or_expression -> logical_or_expression LOR logical_and_expression','logical_or_expression',3,'p_logical_or_expression','main.py',290),
  ('logical_and_expression -> equality_expression','logical_and_expression',1,'p_logical_and_expression','main.py',300),
  ('logical_and_expression -> logical_and_expression LAND equality_expression','logical_and_expression',3,'p_logical_and_expression','main.py',301),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','main.py',310),
  ('equality_expression -> equality_expression EQ relational_expression','equality_expression',3,'p_equality_expression','main.py',311),
  ('equality_expression -> equality_expression NE relational_expression','equality_expression',3,'p_equality_expression','main.py',312),
  ('relational_expression -> additive_expression','relational_expression',1,'p_relational_expression','main.py',323),
  ('relational_expression -> relational_expression LT additive_expression','relational_expression',3,'p_relational_expression','main.py',324),
  ('relational_expression -> relational_expression GT additive_expression','relational_expression',3,'p_relational_expression','main.py',325),
  ('relational_expression -> relational_expression LE additive_expression','relational_expression',3,'p_relational_expression','main.py',326),
  ('relational_expression -> relational_expression GE additive_expression','relational_expression',3,'p_relational_expression','main.py',327),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','main.py',339),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','main.py',340),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','main.py',341),
  ('multiplicative_expression -> unary_expression','multiplicative_expression',1,'p_multiplicative_expression','main.py',351),
  ('multiplicative_expression -> multiplicative_expression TIMES unary_expression','multiplicative_expression',3,'p_multiplicative_expression','main.py',352),
  ('multiplicative_expression -> multiplicative_expression DIVIDE unary_expression','multiplicative_expression',3,'p_multiplicative_expression','main.py',353),
  ('multiplicative_expression -> multiplicative_expression MODULO unary_expression','multiplicative_expression',3,'p_multiplicative_expression','main.py',354),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','main.py',365),
  ('unary_expression -> LNOT unary_expression','unary_expression',2,'p_unary_expression','main.py',366),
  ('unary_expression -> MINUS unary_expression','unary_expression',2,'p_unary_expression','main.py',367),
  ('unary_expression -> INCREMENT unary_expression','unary_expression',2,'p_unary_expression','main.py',368),
  ('unary_expression -> DECREMENT unary_expression','unary_expression',2,'p_unary_expression','main.py',369),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','main.py',381),
  ('postfix_expression -> ID LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_Expression_Funciones','main.py',386),
  ('primary_expression -> ID','primary_expression',1,'p_primary_expression_ID','main.py',410),
  ('primary_expression -> INTEGER','primary_expression',1,'p_primary_expression','main.py',418),
  ('primary_expression -> FLOAT','primary_expression',1,'p_primary_expression','main.py',419),
  ('primary_expression -> STR','primary_expression',1,'p_primary_expression','main.py',420),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','main.py',421),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','main.py',429),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','main.py',430),
]
